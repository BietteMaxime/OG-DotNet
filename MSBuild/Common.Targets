<?xml version="1.0" encoding="utf-8" ?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  
  <PropertyGroup>
    <BuildDependsOn>SetSearchPathTarget;DontSetVersionTarget;SetVersionTarget;$(BuildDependsOn);WarnOnNoStyleCop;WarnOnConfiguration</BuildDependsOn>
  </PropertyGroup>
  
  <!-- config warning -->
  <Target Name="WarnOnConfiguration" Condition="'$(Platform)'!='AnyCPU' OR '$(PlatformTarget)'!='AnyCPU'" >
	<Warning Text="Building $(MSBuildProjectFile) for platform $(Platform) -> $(PlatformTarget). Should be AnyCPU" />
  </Target>
  
  <!-- StyleCop -->
  <PropertyGroup >
    <StyleCopTargetFile>\Microsoft\StyleCop\v4.4\Microsoft.StyleCop.targets</StyleCopTargetFile>
    <SourceAnalysisTreatErrorsAsWarnings>false</SourceAnalysisTreatErrorsAsWarnings>
  </PropertyGroup>
  
  
  <Import Project="$(MSBuildExtensionsPath32)$(StyleCopTargetFile)" Condition="exists('$(MSBuildExtensionsPath32)$(StyleCopTargetFile)')" /> 
  <Import Project="$(MSBuildExtensionsPath64)$(StyleCopTargetFile)" Condition="exists('$(MSBuildExtensionsPath64)$(StyleCopTargetFile)')" /> 

  <Target Name="WarnOnNoStyleCop" Condition="('$(BuildingInsideVisualStudio)'!='true') and ! exists('$(MSBuildExtensionsPath32)$(StyleCopTargetFile)') and ! exists('$(MSBuildExtensionsPath64)$(StyleCopTargetFile)')" >
	<Warning Text="Not checking StyleCop rules due to missing Microsoft.StyleCop.targets" />
  </Target>
  
  <!-- Set version -->
  <Import Project="$(MSBuildExtensionsPath)\MSBuildCommunityTasks\MSBuild.Community.Tasks.Targets"
  Condition="exists('$(MSBuildExtensionsPath)\MSBuildCommunityTasks\MSBuild.Community.Tasks.Targets')"/>
  
  
  <Target Name="DontSetVersionTarget" Condition=" ('$(BuildingInsideVisualStudio)'!='true') and ( ! exists('$(MSBuildExtensionsPath)\MSBuildCommunityTasks\MSBuild.Community.Tasks.Targets') or '$(Revision)' == '' )" >
	<Warning Text="Not setting version information from command line due to missing MSBuild.Community.Tasks.targets" Condition="! exists('$(MSBuildExtensionsPath)\MSBuildCommunityTasks\MSBuild.Community.Tasks.Targets')" />
	<Warning Text="Not setting version information from command line due to no revision being specified" Condition="'$(Revision)' == '' " />
  </Target>
  <Target Name="SetVersionTarget" Condition=" ('$(BuildingInsideVisualStudio)'!='true') and exists('$(MSBuildExtensionsPath)\MSBuildCommunityTasks\MSBuild.Community.Tasks.Targets') and '$(Revision)' != ''" >
    <PropertyGroup>
      <VersionString>1.0.0.$(Revision)</VersionString>
      <VersionFileName>Properties\VersionInfo.cs</VersionFileName>
    </PropertyGroup>

	<Message Text="Setting version information from environment to revision $(Revision)" />

	<AssemblyInfo CodeLanguage="CS"
                  OutputFile="$(VersionFileName)"
                  AssemblyVersion="$(VersionString)"
                  AssemblyFileVersion="$(VersionString)"
                  AssemblyInformationalVersion="$(VersionString) $(BuildName)" 
                  />

    <ItemGroup>
      <Compile Include="$(VersionFileName)">
        <SubType>Code</SubType>
      </Compile>
    </ItemGroup>
  </Target>
    
  <Target Name="AfterBuild" Condition=" '$(BuildingInsideVisualStudio)'!='true' ">
    <Delete  Files="$(VersionFileName)" />
  </Target>
  
  <!-- Search path -->
  <Target Name="SetSearchPathTarget" >
  
    <CreateProperty  Value="$(MSBuildProjectDirectory)\..\lib\;$(AssemblySearchPaths)">  
		<Output TaskParameter="Value" PropertyName="AssemblySearchPaths" />  
	</CreateProperty>  
  </Target>
  
  
  <!-- Build deploy zips -->
  <Target Name="DeployZips">
	 <ItemGroup>
        <ConfigList Condition=" '@(ConfigList)' == '' and $(Config) != '' " Include="$(Config.Split('+'))" />
        <ConfigList Condition=" '@(ConfigList)' == '' " Include="Debug;Release" /><!-- if no configurations were specified, default to both standard -->
    </ItemGroup>
	<MSBuild Projects="$(MSBuildProjectFile)" Properties="Configuration=%(ConfigList.Identity);OutputPath=$(MSBuildProjectDirectory)\bin\%(ConfigList.Identity)" Targets="DeployZip" />
  </Target>

  
  <Target Name="DeployZip" DependsOnTargets="Build" >
	<ItemGroup>
		<ZipFiles Include="$(MSBuildProjectDirectory)\bin\$(Configuration)\*.*" />
	</ItemGroup>
	<MakeDir Directories="$(MSBuildProjectDirectory)\builds" Condition="!Exists('$(MSBuildProjectDirectory)\builds')" />
	<Zip Files="@(ZipFiles)"
       WorkingDirectory="$(MSBuildProjectDirectory)\bin\$(Configuration)\" 
       ZipFileName="$(MSBuildProjectDirectory)\builds\$(AssemblyName)-$(Configuration)-$(VersionString)-$(BuildName).zip"
       ZipLevel="9" /> 
  </Target>
</Project>